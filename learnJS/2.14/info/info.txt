Функция всегда получает только копию значения.
/////////////////////////////////////////////////
function any(anyParam){

}
any()   - ошибки не будет, но anyParam будет undefined
////////////////////////////////////////////////
(!)Альтернативные параметры по умолчанию
Иногда имеет смысл присваивать значения по умолчанию для параметров не в объявлении функции, а на более позднем этапе.
Во время выполнения функции мы можем проверить, передан ли параметр, сравнив его с undefined:
function showMessage(text) {
  // ...
  if (text === undefined) { // если параметр отсутствует
    text = 'пустое сообщение';
  }
  alert(text);
}
showMessage(); // пустое сообщение

…Или мы можем использовать оператор ||:

function showMessage(text) {
  // если значение text ложно или равняется undefined, тогда присвоить text значение 'пусто'
  text = text || 'пусто';
  ...
}

Или оператор ??

function showCount(count) {
  // если count равен undefined или null, показать "неизвестно"
  alert(count ?? "неизвестно");
}
showCount(0); // 0
showCount(null); // неизвестно
showCount(); // неизвестно
//////////////////////////////////////////
Результат функции с пустым return или без него – undefined

function doNothing() { /* пусто */ }

alert( doNothing() === undefined ); // true
Пустой return аналогичен return undefined:

function doNothing() {
  return;
}

alert( doNothing() === undefined ); // true
///////////////////////////////////////////
(!)Никогда не добавляйте перевод строки между return и его значением
