(!)В объявление класса они добавляются с помощью ключевого слова static, например:

class User {
  static staticMethod() {
    alert(this === User);
  }
}

User.staticMethod(); // true

Это фактически то же самое, что присвоить метод напрямую как свойство функции:

class User { }

User.staticMethod = function() {
  alert(this === User);
};

/////////////////////////////////////////////////////////////////////////////////

Скажем, нам нужно несколько способов создания статьи:

1)Создание через заданные параметры (title, date и т. д.).
2)Создание пустой статьи с сегодняшней датой.
3)…или как-то ещё.
Первый способ может быть реализован через конструктор. А для второго можно использовать статический метод класса.

Такой как Article.createTodays() в следующем примере:

class Article {
  constructor(title, date) {
    this.title = title;
    this.date = date;
  }

  static createTodays() {
    // помним, что this = Article
    return new this("Сегодняшний дайджест", new Date());
  }
}

let article = Article.createTodays();

alert( article.title ); // Сегодняшний дайджест

/////////////////////////////////////////////////////////////////////////////////

Статические свойства также возможны, они выглядят как свойства класса, но с static в начале:

class Article {
  static publisher = "Илья Кантор";
}

alert( Article.publisher ); // Илья Кантор
Это то же самое, что и прямое присваивание Article:

Article.publisher = "Илья Кантор";

/////////////////////////////////////////////////////////////////////////////////

